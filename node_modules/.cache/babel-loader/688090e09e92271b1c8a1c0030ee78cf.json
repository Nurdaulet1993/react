{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Nurdaulet\\\\Desktop\\\\React Learning\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nurdaulet\\\\Desktop\\\\React Learning\\\\react\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Radium, { StyleRoot } from 'radium';\nimport Person from './components/person';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"qwqe\",\n        name: 'Max',\n        age: 23\n      }, {\n        id: \"sdsd\",\n        name: 'Danial',\n        age: 27\n      }, {\n        id: \"dfdf\",\n        name: 'Benjin',\n        age: 13\n      }, {\n        id: \"vcvc\",\n        name: 'Alex',\n        age: 21\n      }],\n      showPersons: true\n    };\n\n    this.switchNameHandler = newName => {\n      this.setState({\n        persons: [{\n          name: 'Nurdaulet',\n          age: 25\n        }, {\n          name: newName,\n          age: 27\n        }, {\n          name: 'Benjin',\n          age: 19\n        }, {\n          name: 'Alex',\n          age: 18\n        }]\n      });\n    };\n\n    this.deletePersonHandler = index => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n      console.log(index);\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => p.id === id);\n\n      const person = _objectSpread({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'red',\n      color: '#fff',\n      padding: '16px',\n      ':hover': {\n        backgroundColor: 'green',\n        color: 'red'\n      }\n    };\n    const name = 'Nurdaulet';\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          id: index,\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangeHandler(event, person.id),\n          click: () => this.deletePersonHandler(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = 'red';\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push('bold');\n    }\n\n    return React.createElement(StyleRoot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Hello from \", name, \" \"), React.createElement(\"p\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Tis is really working!\"), React.createElement(\"button\", {\n      onClick: this.togglePersonsHandler,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Switch name\"), persons));\n  }\n\n}\n\nexport default Radium(App);","map":{"version":3,"sources":["C:\\Users\\Nurdaulet\\Desktop\\React Learning\\react\\src\\App.js"],"names":["React","Component","Radium","StyleRoot","Person","App","state","persons","id","name","age","showPersons","switchNameHandler","newName","setState","deletePersonHandler","index","splice","console","log","nameChangeHandler","event","personIndex","findIndex","p","person","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","color","padding","map","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport Person from './components/person';\r\nimport './App.css';\r\nclass App extends Component {\r\n\r\n  state = {\r\n    persons: [\r\n      { id:\"qwqe\", name: 'Max', age: 23 },\r\n      { id:\"sdsd\", name: 'Danial', age: 27 },\r\n      { id:\"dfdf\", name: 'Benjin', age: 13 },\r\n      { id:\"vcvc\", name: 'Alex', age: 21 }\r\n    ],\r\n    showPersons: true\r\n  }\r\n\r\n  switchNameHandler = (newName) => {\r\n    this.setState({\r\n      persons: [\r\n        {name: 'Nurdaulet', age: 25},\r\n        {name: newName, age: 27},\r\n        {name: 'Benjin', age: 19},\r\n        {name: 'Alex', age: 18}\r\n      ]\r\n    });\r\n  }\r\n\r\n  deletePersonHandler = (index) => {\r\n    // const persons = this.state.persons.slice();\r\n    const persons = [...this.state.persons];\r\n    persons.splice(index, 1);\r\n    this.setState({persons: persons});\r\n    console.log(index);\r\n  }\r\n\r\n  nameChangeHandler = (event, id) => {\r\n    const personIndex = this.state.persons.findIndex(p => p.id === id)\r\n    const person = {\r\n      ...this.state.persons[personIndex]\r\n    }\r\n\r\n    person.name = event.target.value;\r\n    const persons = [...this.state.persons];\r\n    persons[personIndex] = person;\r\n\r\n    this.setState({\r\n      persons: persons\r\n        \r\n    });\r\n  }\r\n  togglePersonsHandler = () => {\r\n      const doesShow = this.state.showPersons;\r\n      this.setState({showPersons: !doesShow});\r\n  }\r\n  render() {\r\n    const style = {\r\n      backgroundColor: 'red',\r\n      color: '#fff',\r\n      padding: '16px',\r\n      ':hover': {\r\n        backgroundColor: 'green',\r\n        color: 'red'\r\n      }\r\n    }\r\n    const name = 'Nurdaulet';\r\n    let persons = null;\r\n\r\n    if(this.state.showPersons) {\r\n      persons = (\r\n        \r\n        <div>\r\n          {this.state.persons.map((person, index) => {\r\n            return(\r\n              <Person \r\n                id = {index}\r\n                name={person.name} \r\n                age={person.age} \r\n                key={person.id}\r\n                changed={(event) => this.nameChangeHandler(event, person.id)}\r\n                click={() => this.deletePersonHandler(index)}/>\r\n            );\r\n        })}\r\n          {/* <Person name={this.state.persons[0].name} age={this.state.persons[0].age}/>\r\n          <Person \r\n            name={this.state.persons[1].name} \r\n            age={this.state.persons[1].age}\r\n            click={this.switchNameHandler.bind(this, 'Merjan')}\r\n            changed={this.nameChangeHandler}/>\r\n          <Person name={this.state.persons[2].name} age={this.state.persons[2].age}/>\r\n          <Person name=\"Samen\" age='20'>Hello Worlrfvd</Person> */}\r\n        </div>\r\n        \r\n      );\r\n      style.backgroundColor = 'red';\r\n    }\r\n\r\n    const classes = [];\r\n    if (this.state.persons.length <=2){\r\n      classes.push('red');\r\n    }\r\n    if (this.state.persons.length <=1){\r\n      classes.push('bold');\r\n    }\r\n\r\n    return (\r\n      <StyleRoot>\r\n        <div className=\"App\">\r\n        <h1>Hello from {name} </h1>\r\n        <p className={classes.join(' ')}>Tis is really working!</p>\r\n        <button onClick={this.togglePersonsHandler} style={style}>Switch name</button>\r\n        {persons}\r\n      </div>\r\n      </StyleRoot>\r\n      \r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default  Radium(App);\r\n"]},"metadata":{},"sourceType":"module"}